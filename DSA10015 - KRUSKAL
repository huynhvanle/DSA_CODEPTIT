#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007
#define run() int t; cin >> t; while(t--)
#define fast() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) x.begin(), x.end()
#define reset(x) memset(x, 0, sizeof(x))
#define fi first
#define se second
#define db double
#define fl float
#define ll long long

struct edge{
    int u, v, w;
    edge(int u, int v, int w){
        this -> u = u;
        this -> v = v;
        this -> w = w;
    }
};

int n, c;
int par[1000];
int level[1000];
vector<edge> dsc;

void make(){
    for(int i = 1; i <= n; i++){
        par[i] = i;
        level[i] = 1;
    }
}

bool cmp(edge x, edge y){
    return x.w < y.w;
}

int find(int u){
    if(u == par[u]) return u;
    return par[u] = find(par[u]);
}

bool uni(int a, int b){
    a = find(a); b = find(b);
    if(a == b) return false;
    if(level[a] < level[b]) swap(a,b);
    par[b] = a;
    level[a] += level[b];
    return true;
}

int kruskal(){
    int d = 0;
    for(edge x : dsc){
        if(uni(x.u, x.v)){
            d += x.w;
        }
    }
    return d;
}

int main(){
    fast();
    run(){
        cin >> n >> c;
        dsc.clear();
        for(int i = 0; i < c; i++){
            int u, v, w; cin >> u >> v >> w;
            edge x(u, v, w);
            dsc.push_back(x);
        }
        sort(all(dsc), cmp);
        make();
        cout << kruskal() << endl;
    }
}
