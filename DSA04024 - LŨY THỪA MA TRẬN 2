#include <iostream>
#include <math.h>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <cctype>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <cstring>
#include <fstream>
#include <deque>
#include <stack>
#include <queue>
#include <stdio.h>
#define MOD 1000000007
#define run() int t; cin >> t; while(t--)
#define fast() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll;
typedef double db;
typedef float fl;
ll n;
struct matran{
   ll x[20][20];
   friend matran operator * (matran a, matran b){
       matran c;
       for(int i = 0; i < n; i++){
           for(int j = 0; j < n; j++){
               c.x[i][j] = 0;
               for(int k = 0; k < n; k++){
                   c.x[i][j] += a.x[i][k] * b.x[k][j];
                   c.x[i][j] %= MOD;
               }
           }
       }
       return c;
   }
};

matran power(matran a, ll k){
   if(k == 1) return a;
   matran tmp = power(a, k / 2);
   if(k % 2 == 0) return (tmp * tmp);
   else return tmp * tmp * a;
}

int main() {
   fast();
   run(){
       cin >> n;
       ll k; cin >> k;
       matran a;
       for(int i = 0; i < n; i++)
           for(int j = 0; j < n; j++)
               cin >> a.x[i][j];
       matran rs = power(a, k);
       ll sum = 0;
       for(int i = 0; i < n; i++){
           sum = ((sum % MOD) + (rs.x[i][n - 1] % MOD)) % MOD;
       }
       cout << sum << endl;
   }
   return 0;
}
